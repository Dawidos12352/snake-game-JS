{"mappings":"AAEA,IAEIA,EACAC,EAEAC,EACAC,EAAY,GAIZC,EAAQ,EAaZ,SAASC,IACLF,EAAW,GACXH,EAAMM,UAAY,GAClBJ,EAAY,GACZE,EAAQ,EAER,IAAK,IAAIG,EAAI,EAAGA,GA9BF,GA8BkBA,IAAK,CACjC,MAAMC,EAAQC,SAASC,cAAc,OACrCF,EAAMG,UAAUC,IAAI,OACpB,IAAI,IAAIC,EAAI,EAAGA,EAjCL,GAiCoBA,IAAK,CAC/B,MAAMC,EAASL,SAASC,cAAc,OACtCI,EAAOH,UAAUC,IAAI,QACrBE,EAAOC,UAAY,GAAGF,OAAON,IAEzBL,EAAUW,KACVX,EAAUW,GAAK,IAEnBX,EAAUW,GAAGN,GAAKO,EAClBN,EAAMQ,OAAOF,E,CAEjBd,EAAMgB,OAAOR,E,CA1BjBS,cAAgB,CACZ,CAACJ,EAAIK,KAAKC,MAAMC,MAAgBb,EAAGW,KAAKC,MAAMC,QA8BlDnB,EAAWoB,aAAY,KACnBC,GAAa,GAjDI,I,CAqDzB,MAAMA,EAAc,KAChBpB,EAAUqB,SAASC,IACfA,EAAID,SAASE,IACTA,EAAKd,UAAY,MAAM,GACzB,IAENM,cAAcM,SAAQ,EAACV,EAACA,EAACN,EAAEA,MACvBL,EAAUW,GAAGN,GAAGI,UAAUC,IAAI,QAAQ,GACxC,EAGNc,OAAOC,iBAAiB,QAAS,KAC5B3B,EAAQS,SAASmB,cAAc,UAEhCvB,GAAW","sources":["src/index.js"],"sourcesContent":["\nconst GAME_SIZE = 21;\nlet DIFFICULTY_LOOP_MS = 100;\n\nlet board;\nlet gameLoop;\n\nlet gameBoard;\nlet direction = \"\";\nlet lastAppliedDirection;\nlet snakePos = [];\nlet foodPos = {};\nlet score = 0;\n\nconst randomCordinate = (min = 1, max = GAME_SIZE - 2 ) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nconst resetSnakePosition = () => {\n    snakePosition = [\n        {x : Math.floor(GAME_SIZE / 2), y: Math.floor(GAME_SIZE / 2)}\n    ];\n};\n\n\nfunction startGame(){\n    direction =\"\";\n    board.innerHTML = ''; \n    gameBoard = [];\n    score = 0;\n\n    for (let y = 0; y <= GAME_SIZE; y ++){\n        const rowEl = document.createElement(\"div\")\n        rowEl.classList.add(\"row\")\n        for(let x = 0; x < GAME_SIZE; x++) {\n            const cellEl = document.createElement(\"div\")\n            cellEl.classList.add(\"cell\")\n            cellEl.innerText = `${x} / ${y}`\n\n            if(!gameBoard[x]){\n                gameBoard[x] = []\n            }\n            gameBoard[x][y] = cellEl\n            rowEl.append(cellEl)\n        }\n        board.append(rowEl)\n    }\n\nresetSnakePosition()\n\n    gameLoop = setInterval(() => {\n        updateBoard();\n    }, DIFFICULTY_LOOP_MS)\n}\n\nconst updateBoard = () => {\n    gameBoard.forEach((row) => {\n        row.forEach((cell) => {\n            cell.classList = \"cell\"\n        })\n    });\n    snakePosition.forEach(({x, y}) => {\n        gameBoard[x][y].classList.add(\"snake\")\n    })\n}\n\nwindow.addEventListener(\"load\" , () => {\n     board = document.querySelector(\"#board\")\n    \n    startGame();\n})"],"names":["$1f0dc3b9307be026$var$board","$1f0dc3b9307be026$var$gameLoop","$1f0dc3b9307be026$var$gameBoard","$1f0dc3b9307be026$var$direction","$1f0dc3b9307be026$var$score","$1f0dc3b9307be026$var$startGame","innerHTML","y","rowEl","document","createElement","classList","add","x","cellEl","innerText","append","snakePosition","Math","floor","$1f0dc3b9307be026$var$GAME_SIZE","setInterval","$1f0dc3b9307be026$var$updateBoard","forEach","row","cell","window","addEventListener","querySelector"],"version":3,"file":"index.4800469c.js.map"}