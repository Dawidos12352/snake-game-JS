{"mappings":"iEAOUA,EAAMC,E;;;;;;;GAAND,EAMPE,EANaD,EAMP,SAASE,GAEhB,IAAIC,EAAW,SAASC,GAEpB,OAAO,IAAID,EAASE,IAAIC,KAAKF,E,EAuYjC,SAASG,EAAoBC,EAAMJ,GAEjC,OAAGA,EAAQK,OAAOD,GACbE,MAAMN,EAAQK,OAAOD,IACfJ,EAAQK,OAAOD,GAGfJ,EAAQK,OAAOD,GAAQ,KAI3B,K,CAIT,SAASG,EAAcC,EAAMC,GAC3B,SAAKD,GAA6B,iBAAdC,KAGlBD,EAAKE,WACLF,EAAKE,UACFC,OACAC,MAAK,SACLC,QAAQJ,IAAa,G,CAY5B,OApaAV,EAASe,SAAW,CAClBC,aAAa,EACbC,KAAM,uBACNC,UAAMC,EACNC,SAAU,IACVC,cAAUF,EACVG,SAAU,WAAY,EAEtBC,iBAAaJ,EACbK,WAAW,EACXC,OAAO,EACPC,QAAS,eACTC,cAAc,EACdC,SAAU,GACVC,gBAAiB,GACjBC,OAAQ,GACRnB,UAAW,GACXoB,aAAa,EACbC,QAAS,WAAY,EAErB1B,OAAQ,CAAC2B,EAAG,EAAGC,EAAG,GAClBC,cAAc,EACdC,SAAU,SACVC,MAAO,CAACC,WAAY,KAItBtC,EAASE,IAAMF,EAASuC,UAAY,CAClCC,SA/BU,SAiCVC,YAAazC,EAGbG,KAAM,SAASF,GAqCb,OAnCKA,IACHA,EAAU,IAIZyC,KAAKzC,QAAU,GAEfyC,KAAKC,aAAe,KAGpBD,KAAKzC,QAAQgB,KAAOhB,EAAQgB,MAAQjB,EAASe,SAASE,KACtDyB,KAAKzC,QAAQiB,KAAOjB,EAAQiB,MAAQlB,EAASe,SAASG,KACtDwB,KAAKzC,QAAQmB,SAAgC,IAArBnB,EAAQmB,SAAiB,EAAInB,EAAQmB,UAAYpB,EAASe,SAASK,SAC3FsB,KAAKzC,QAAQoB,SAAWpB,EAAQoB,UAAYrB,EAASe,SAASM,SAC9DqB,KAAKzC,QAAQqB,SAAWrB,EAAQqB,UAAYtB,EAASe,SAASO,SAC9DoB,KAAKzC,QAAQsB,YAActB,EAAQsB,aAAevB,EAASe,SAASQ,YACpEmB,KAAKzC,QAAQuB,UAAYvB,EAAQuB,WAAaxB,EAASe,SAASS,UAChEkB,KAAKzC,QAAQwB,MAAQxB,EAAQwB,OAASzB,EAASe,SAASU,MACxDiB,KAAKzC,QAAQyB,QAA8B,WAApBzB,EAAQyB,QAAuB,kBAAoB1B,EAASe,SAASW,QAC5FgB,KAAKzC,QAAQ0B,aAAe1B,EAAQ0B,cAAgB3B,EAASe,SAASY,aACtEe,KAAKzC,QAAQ2B,SAAW3B,EAAQ2B,UAAY5B,EAASe,SAASa,SAC9Dc,KAAKzC,QAAQ4B,gBAAkB5B,EAAQ4B,iBAAmB7B,EAASe,SAASc,gBAC5Ea,KAAKzC,QAAQ6B,OAAS7B,EAAQ6B,QAAU9B,EAASe,SAASe,OAC1DY,KAAKzC,QAAQU,UAAYV,EAAQU,WAAaX,EAASe,SAASJ,UAChE+B,KAAKzC,QAAQ8B,iBAAsCZ,IAAxBlB,EAAQ8B,YAA4B/B,EAASe,SAASgB,YAAc9B,EAAQ8B,YACvGW,KAAKzC,QAAQ+B,QAAU/B,EAAQ+B,SAAWhC,EAASe,SAASiB,QAC5DU,KAAKzC,QAAQK,OAASL,EAAQK,QAAUN,EAASe,SAAST,OAC1DoC,KAAKzC,QAAQkC,kBAAwChB,IAAzBlB,EAAQkC,aAA6BlC,EAAQkC,aAAenC,EAASe,SAASoB,aAC1GO,KAAKzC,QAAQmC,SAAWnC,EAAQmC,UAAYpC,EAASe,SAASqB,SAC9DM,KAAKzC,QAAQoC,MAAQpC,EAAQoC,OAASrC,EAASe,SAASsB,MACrDpC,EAAQ4B,kBACTa,KAAKzC,QAAQoC,MAAMC,WAAarC,EAAQ4B,iBAInCa,I,EAITE,WAAY,WAEV,IAAKF,KAAKzC,QACR,KAAM,8BAIR,IAAI4C,EAAaC,SAASC,cAAc,OA0BxC,IAAK,IAAIC,KAzBTH,EAAWlC,UAAY,eAAiB+B,KAAKzC,QAAQU,UAG/C+B,KAAKzC,QAAQ2B,SACjBiB,EAAWlC,WAAa,aAAe+B,KAAKzC,QAAQ2B,UAGlB,IAA9Bc,KAAKzC,QAAQ0B,cACfkB,EAAWlC,WAAa,iBACxBsC,QAAQC,KAAK,oGAGbL,EAAWlC,WAAa,kBAK5BkC,EAAWlC,WAAa,IAAM+B,KAAKzC,QAAQyB,QAEvCgB,KAAKzC,QAAQ4B,iBAEfoB,QAAQC,KAAK,0GAIMR,KAAKzC,QAAQoC,MAChCQ,EAAWR,MAAMW,GAAYN,KAAKzC,QAAQoC,MAAMW,GASlD,GALIN,KAAKzC,QAAQmC,UACfS,EAAWM,aAAa,YAAaT,KAAKzC,QAAQmC,UAIhDM,KAAKzC,QAAQiB,MAAQwB,KAAKzC,QAAQiB,KAAKkC,WAAaC,KAAKC,aAE3DT,EAAWU,YAAYb,KAAKzC,QAAQiB,WAQpC,GANIwB,KAAKzC,QAAQkC,aACfU,EAAWW,UAAYd,KAAKzC,QAAQgB,KAEpC4B,EAAWY,UAAYf,KAAKzC,QAAQgB,KAGV,KAAxByB,KAAKzC,QAAQ6B,OAAe,CAC9B,IAAI4B,EAAgBZ,SAASC,cAAc,OAC3CW,EAAcC,IAAMjB,KAAKzC,QAAQ6B,OAEjC4B,EAAc/C,UAAY,kBAEG,QAAzB+B,KAAKzC,QAAQ2B,WAAoD,IAA9Bc,KAAKzC,QAAQ0B,aAElDkB,EAAWU,YAAYG,GAGvBb,EAAWe,sBAAsB,aAAcF,E,CAMrD,IAA2B,IAAvBhB,KAAKzC,QAAQwB,MAAgB,CAE/B,IAAIoC,EAAef,SAASC,cAAc,UAC1Cc,EAAaC,KAAO,SACpBD,EAAaV,aAAa,aAAc,SACxCU,EAAalD,UAAY,cACzBkD,EAAaJ,UAAY,WAGzBI,EAAaE,iBACX,QACA,SAASC,GACPA,EAAMC,kBACNvB,KAAKwB,cAAcxB,KAAKC,cACxBwB,OAAOC,aAAa1B,KAAKC,aAAa0B,aACvC,EAACC,KAAK5B,OAIT,IAAI6B,EAAQJ,OAAOK,WAAa,EAAIL,OAAOK,WAAaC,OAAOF,OAIjC,QAAzB7B,KAAKzC,QAAQ2B,WAAoD,IAA9Bc,KAAKzC,QAAQ0B,eAA0B4C,EAAQ,IAErF1B,EAAWe,sBAAsB,aAAcC,GAG/ChB,EAAWU,YAAYM,E,CAK3B,GAAInB,KAAKzC,QAAQ8B,aAAeW,KAAKzC,QAAQmB,SAAW,EAAG,CACzD,IAAIsD,EAAOhC,KAEXG,EAAWkB,iBACT,aACA,SAASC,GACPG,OAAOC,aAAavB,EAAWwB,a,IAInCxB,EAAWkB,iBACT,cACA,WACElB,EAAWwB,aAAeF,OAAOQ,YAC/B,WAEED,EAAKR,cAAcrB,E,GAErB6B,EAAKzE,QAAQmB,S,IAgCrB,QAzBwC,IAA7BsB,KAAKzC,QAAQsB,aACtBsB,EAAWkB,iBACT,QACA,SAASC,GACPA,EAAMC,mBACyB,IAA3BvB,KAAKzC,QAAQuB,UACf2C,OAAOS,KAAKlC,KAAKzC,QAAQsB,YAAa,UAEtC4C,OAAOU,SAAWnC,KAAKzC,QAAQsB,WAElC,EAAC+C,KAAK5B,OAIyB,mBAAzBA,KAAKzC,QAAQ+B,cAA8D,IAA7BU,KAAKzC,QAAQsB,aACpEsB,EAAWkB,iBACT,QACA,SAASC,GACPA,EAAMC,kBACNvB,KAAKzC,QAAQ+B,SACd,EAACsC,KAAK5B,OAKuB,iBAAxBA,KAAKzC,QAAQK,OAAqB,CAE1C,IAAI2B,EAAI7B,EAAoB,IAAKsC,KAAKzC,SAClCiC,EAAI9B,EAAoB,IAAKsC,KAAKzC,SAElC6E,EAAmC,QAAzBpC,KAAKzC,QAAQ2B,SAAqBK,EAAI,IAAMA,EACtD8C,EAAkC,gBAAxBrC,KAAKzC,QAAQyB,QAA4BQ,EAAI,IAAMA,EAEjEW,EAAWR,MAAM2C,UAAY,aAAeF,EAAU,IAAMC,EAAU,G,CAKxE,OAAOlC,C,EAIToC,UAAW,WAKT,IAAIC,EAUJ,GAbAxC,KAAKC,aAAeD,KAAKE,eAKvBsC,EADmC,iBAA1BxC,KAAKzC,QAAQoB,SACRyB,SAASqC,eAAezC,KAAKzC,QAAQoB,UAC1CqB,KAAKzC,QAAQoB,oBAAoB+D,aAAsC,oBAAfC,YAA8B3C,KAAKzC,QAAQoB,oBAAoBgE,WAClH3C,KAAKzC,QAAQoB,SAEbyB,SAASwC,MAKvB,KAAM,8BAIR,IAAIC,EAAkBvF,EAASe,SAASC,YAAckE,EAAYM,WAAaN,EAAYO,UAiB3F,OAhBAP,EAAYQ,aAAahD,KAAKC,aAAc4C,GAG5CvF,EAAS2F,aAELjD,KAAKzC,QAAQmB,SAAW,IAC1BsB,KAAKC,aAAa0B,aAAeF,OAAOQ,WACtC,WAEEjC,KAAKwB,cAAcxB,KAAKC,aACzB,EAAC2B,KAAK5B,MACPA,KAAKzC,QAAQmB,WAKVsB,I,EAGTkD,UAAW,WACLlD,KAAKC,aAAa0B,cACpBD,aAAa1B,KAAKC,aAAa0B,cAEjC3B,KAAKwB,cAAcxB,KAAKC,a,EAI1BuB,cAAe,SAASvB,GAGtBA,EAAahC,UAAYgC,EAAahC,UAAUkF,QAAQ,MAAO,IAG/D1B,OAAOQ,WACL,WAEMjC,KAAKzC,QAAQiB,MAAQwB,KAAKzC,QAAQiB,KAAK4E,YACzCpD,KAAKzC,QAAQiB,KAAK4E,WAAWC,YAAYrD,KAAKzC,QAAQiB,MAIpDyB,EAAamD,YACfnD,EAAamD,WAAWC,YAAYpD,GAItCD,KAAKzC,QAAQqB,SAAS0E,KAAKrD,GAG3B3C,EAAS2F,YACV,EAACrB,KAAK5B,MACP,I,GAMN1C,EAAS2F,WAAa,WAsBpB,IAnBA,IAgBIM,EAhBAC,EAAoB,CACtBC,IAAK,GACLC,OAAQ,IAENC,EAAqB,CACvBF,IAAK,GACLC,OAAQ,IAENE,EAAa,CACfH,IAAK,GACLC,OAAQ,IAING,EAAYzD,SAAS0D,uBAAuB,YAKvCC,EAAI,EAAGA,EAAIF,EAAUG,OAAQD,IAAK,CAGvCR,GADkD,IAAhDzF,EAAc+F,EAAUE,GAAI,gBAClB,eAEA,kBAGd,IAAIE,EAASJ,EAAUE,GAAGG,aAC1BX,EAAYA,EAAUY,OAAO,EAAGZ,EAAUS,OAAO,IAIrCvC,OAAOK,WAAa,EAAIL,OAAOK,WAAaC,OAAOF,QAGlD,KAEXgC,EAAUE,GAAGpE,MAAM4D,GAAaK,EAAWL,GAAa,KAExDK,EAAWL,IAAcU,EATd,KAW0C,IAAjDnG,EAAc+F,EAAUE,GAAI,kBAE9BF,EAAUE,GAAGpE,MAAM4D,GAAaC,EAAkBD,GAAa,KAE/DC,EAAkBD,IAAcU,EAfvB,KAkBTJ,EAAUE,GAAGpE,MAAM4D,GAAaI,EAAmBJ,GAAa,KAEhEI,EAAmBJ,IAAcU,EApBxB,G,CA0Bf,OAAOjE,I,EAoCT1C,EAASE,IAAIC,KAAKoC,UAAYvC,EAASE,IAGhCF,C,EAnb2BF,EAChCA,EAAiBD,IAEjBD,EAAKI,SAAWH,ICTpB,IAGIiH,EACAC,EAEAC,EAEAC,EAREC,EAAY,GAOdC,EAAY,KAEZC,EAAW,GACXC,EAAU,GACVC,EAAQ,EAENC,EAAkB,W,IAACC,EAAGC,UAAAf,OAAA,YAAAe,UAAA,GAAAA,UAAA,GAAG,EAAGC,EAAGD,UAAAf,OAAA,YAAAe,UAAA,GAAAA,UAAA,GAAGP,GACpC,OAAOS,KAAKC,MAAMD,KAAKE,UAAYH,EAAMF,EAAM,GAAKA,E,EAQlDM,EAAiB,WACnB,IAAI7F,EACAC,EAEJ,GACID,EAAIsF,IACJrF,EAAIqF,UACAH,EAASW,MAAK,SAAAC,G,OAAMA,EAAG/F,IAAMA,GAAK+F,EAAG9F,IAAMA,C,KACnDmF,EAAQpF,EAAIA,EACZoF,EAAQnF,EAAIA,EACZoF,GAAS,C,EAKb,SAASW,IACLd,EAAW,GACXL,EAAMrD,UAAY,GAClBuD,EAAY,GACZM,EAAQ,EAER,IAAK,IAAIpF,EAAI,EAAGA,GAAKgF,EAAWhF,IAAK,CACjC,IAAMgG,EAAQpF,SAASC,cAAc,OACrCmF,EAAMC,UAAUC,IAAI,OACpB,IAAI,IAAInG,EAAI,EAAGA,EAAIiF,EAAWjF,IAAK,CAC/B,IAAMoG,EAASvF,SAASC,cAAc,OACtCsF,EAAOF,UAAUC,IAAI,QAGjBpB,EAAU/E,KACV+E,EAAU/E,GAAK,IAEnB+E,EAAU/E,GAAGC,GAAKmG,EAClBH,EAAMI,OAAOD,E,CAEjBvB,EAAMwB,OAAOJ,E,CAvCjBd,EAAW,CACP,CAACnF,EAAI0F,KAAKC,MAAMV,MAAgBhF,EAAGyF,KAAKC,MAAMV,QA0CtDY,IACAS,cAAcxB,GACVA,EAAWyB,aAAY,WACnBC,IACAC,G,GAhEiB,I,CAmEzB,IAAMC,EAAqB,SAACC,GACxB,OAAGA,EAAI3G,IAAMiF,GACR0B,EAAI1G,IAAMgF,GACT0B,EAAI3G,EAAI,GACP2G,EAAI1G,EAAI,C,EAcb2G,EAAc,SAACD,G,OAAQA,EAAI3G,IAAMoF,EAAQpF,GAAK2G,EAAI1G,IAAMmF,EAAQnF,C,EAEhE4G,EAAuB,SAACF,G,OACzBxB,EAASW,MAAK,SAACC,EAAIvB,G,OAAMuB,EAAG/F,IAAM2G,EAAI3G,GAAK+F,EAAG9F,IAAM0G,EAAI1G,GAAW,IAANuE,C,KAG5DgC,EAAyB,WAK3B,IAJA,IAAMM,EAAsB,CACxB9G,EAAImF,EAASA,EAASV,OAAQ,GAAGzE,EACjCC,EAAIkF,EAASA,EAASV,OAAQ,GAAGxE,GAE7BuE,EAAIW,EAASV,OAAQ,EAAGD,GAAK,EAAGA,IAAI,CACxC,IAAMmC,EAAMxB,EAASX,GACrB,GAAS,IAANA,GAgBH,GAfqB,OAAdU,IACCyB,EAAI1G,GAAK,GAEI,SAAdiF,IACCyB,EAAI3G,GAAK,GAEI,SAAdkF,IACCyB,EAAI1G,GAAK,GAEI,UAAdiF,IACCyB,EAAI3G,GAAK,GAGbgF,EAAuBE,EAExBwB,EAAmBC,IAAQE,EAAqBF,GAE/C,OAtCRI,EAAAlJ,EAAA,CAAS,CACLmB,KAAM,6BAAmCgI,OAAN3B,GACnClG,SAAU,MACX6D,iBACHgD,SAqCIW,EAAI3G,EAAImF,EAASX,EAAG,GAAGxE,EACvB2G,EAAI1G,EAAIkF,EAASX,EAAG,GAAGvE,EAGxB2G,EAAYD,KACXd,IACAV,EAAS8B,KAAKH,G,GAKhBL,EAAc,WAChB1B,EAAUmC,SAAQ,SAACC,GACfA,EAAID,SAAQ,SAACE,GACTA,EAAKlB,UAAY,M,OAGzBf,EAAS+B,SAAQ,SAAAG,G,IAAErH,EAACqH,EAADrH,EAAGC,EAACoH,EAADpH,EAClB8E,EAAU/E,GAAGC,GAAGiG,UAAUC,IAAI,Q,IAGlCpB,EAAUK,EAAQpF,GAAGoF,EAAQnF,GAAGiG,UAAUC,IAAI,O,EAKlDjE,OAAOJ,iBAAiB,QAAS,WAC5B+C,EAAQhE,SAASyG,cAAc,UAEhCtB,G,IAGJnF,SAASiB,iBAAiB,WAAW,SAACyF,GAClC,OAAOA,EAAEC,MACL,IAAK,UAC2B,SAAzBxC,IAAiCE,EAAY,MAChD,MACJ,IAAK,YAC2B,OAAzBF,IAA+BE,EAAY,QAC9C,MACJ,IAAK,YAC2B,UAAzBF,IAAkCE,EAAY,QACjD,MACJ,IAAK,aAC2B,SAAzBF,IAAiCE,EAAY,S","sources":["node_modules/toastify-js/src/toastify.js","src/index.js"],"sourcesContent":["/*!\n * Toastify js 1.12.0\n * https://github.com/apvarun/toastify-js\n * @license MIT licensed\n *\n * Copyright (C) 2018 Varun A P\n */\n(function(root, factory) {\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Toastify = factory();\n  }\n})(this, function(global) {\n  // Object initialization\n  var Toastify = function(options) {\n      // Returning a new init object\n      return new Toastify.lib.init(options);\n    },\n    // Library version\n    version = \"1.12.0\";\n\n  // Set the default global options\n  Toastify.defaults = {\n    oldestFirst: true,\n    text: \"Toastify is awesome!\",\n    node: undefined,\n    duration: 3000,\n    selector: undefined,\n    callback: function () {\n    },\n    destination: undefined,\n    newWindow: false,\n    close: false,\n    gravity: \"toastify-top\",\n    positionLeft: false,\n    position: '',\n    backgroundColor: '',\n    avatar: \"\",\n    className: \"\",\n    stopOnFocus: true,\n    onClick: function () {\n    },\n    offset: {x: 0, y: 0},\n    escapeMarkup: true,\n    ariaLive: 'polite',\n    style: {background: ''}\n  };\n\n  // Defining the prototype of the object\n  Toastify.lib = Toastify.prototype = {\n    toastify: version,\n\n    constructor: Toastify,\n\n    // Initializing the object with required parameters\n    init: function(options) {\n      // Verifying and validating the input object\n      if (!options) {\n        options = {};\n      }\n\n      // Creating the options object\n      this.options = {};\n\n      this.toastElement = null;\n\n      // Validating the options\n      this.options.text = options.text || Toastify.defaults.text; // Display message\n      this.options.node = options.node || Toastify.defaults.node;  // Display content as node\n      this.options.duration = options.duration === 0 ? 0 : options.duration || Toastify.defaults.duration; // Display duration\n      this.options.selector = options.selector || Toastify.defaults.selector; // Parent selector\n      this.options.callback = options.callback || Toastify.defaults.callback; // Callback after display\n      this.options.destination = options.destination || Toastify.defaults.destination; // On-click destination\n      this.options.newWindow = options.newWindow || Toastify.defaults.newWindow; // Open destination in new window\n      this.options.close = options.close || Toastify.defaults.close; // Show toast close icon\n      this.options.gravity = options.gravity === \"bottom\" ? \"toastify-bottom\" : Toastify.defaults.gravity; // toast position - top or bottom\n      this.options.positionLeft = options.positionLeft || Toastify.defaults.positionLeft; // toast position - left or right\n      this.options.position = options.position || Toastify.defaults.position; // toast position - left or right\n      this.options.backgroundColor = options.backgroundColor || Toastify.defaults.backgroundColor; // toast background color\n      this.options.avatar = options.avatar || Toastify.defaults.avatar; // img element src - url or a path\n      this.options.className = options.className || Toastify.defaults.className; // additional class names for the toast\n      this.options.stopOnFocus = options.stopOnFocus === undefined ? Toastify.defaults.stopOnFocus : options.stopOnFocus; // stop timeout on focus\n      this.options.onClick = options.onClick || Toastify.defaults.onClick; // Callback after click\n      this.options.offset = options.offset || Toastify.defaults.offset; // toast offset\n      this.options.escapeMarkup = options.escapeMarkup !== undefined ? options.escapeMarkup : Toastify.defaults.escapeMarkup;\n      this.options.ariaLive = options.ariaLive || Toastify.defaults.ariaLive;\n      this.options.style = options.style || Toastify.defaults.style;\n      if(options.backgroundColor) {\n        this.options.style.background = options.backgroundColor;\n      }\n\n      // Returning the current object for chaining functions\n      return this;\n    },\n\n    // Building the DOM element\n    buildToast: function() {\n      // Validating if the options are defined\n      if (!this.options) {\n        throw \"Toastify is not initialized\";\n      }\n\n      // Creating the DOM object\n      var divElement = document.createElement(\"div\");\n      divElement.className = \"toastify on \" + this.options.className;\n\n      // Positioning toast to left or right or center\n      if (!!this.options.position) {\n        divElement.className += \" toastify-\" + this.options.position;\n      } else {\n        // To be depreciated in further versions\n        if (this.options.positionLeft === true) {\n          divElement.className += \" toastify-left\";\n          console.warn('Property `positionLeft` will be depreciated in further versions. Please use `position` instead.')\n        } else {\n          // Default position\n          divElement.className += \" toastify-right\";\n        }\n      }\n\n      // Assigning gravity of element\n      divElement.className += \" \" + this.options.gravity;\n\n      if (this.options.backgroundColor) {\n        // This is being deprecated in favor of using the style HTML DOM property\n        console.warn('DEPRECATION NOTICE: \"backgroundColor\" is being deprecated. Please use the \"style.background\" property.');\n      }\n\n      // Loop through our style object and apply styles to divElement\n      for (var property in this.options.style) {\n        divElement.style[property] = this.options.style[property];\n      }\n\n      // Announce the toast to screen readers\n      if (this.options.ariaLive) {\n        divElement.setAttribute('aria-live', this.options.ariaLive)\n      }\n\n      // Adding the toast message/node\n      if (this.options.node && this.options.node.nodeType === Node.ELEMENT_NODE) {\n        // If we have a valid node, we insert it\n        divElement.appendChild(this.options.node)\n      } else {\n        if (this.options.escapeMarkup) {\n          divElement.innerText = this.options.text;\n        } else {\n          divElement.innerHTML = this.options.text;\n        }\n\n        if (this.options.avatar !== \"\") {\n          var avatarElement = document.createElement(\"img\");\n          avatarElement.src = this.options.avatar;\n\n          avatarElement.className = \"toastify-avatar\";\n\n          if (this.options.position == \"left\" || this.options.positionLeft === true) {\n            // Adding close icon on the left of content\n            divElement.appendChild(avatarElement);\n          } else {\n            // Adding close icon on the right of content\n            divElement.insertAdjacentElement(\"afterbegin\", avatarElement);\n          }\n        }\n      }\n\n      // Adding a close icon to the toast\n      if (this.options.close === true) {\n        // Create a span for close element\n        var closeElement = document.createElement(\"button\");\n        closeElement.type = \"button\";\n        closeElement.setAttribute(\"aria-label\", \"Close\");\n        closeElement.className = \"toast-close\";\n        closeElement.innerHTML = \"&#10006;\";\n\n        // Triggering the removal of toast from DOM on close click\n        closeElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.removeElement(this.toastElement);\n            window.clearTimeout(this.toastElement.timeOutValue);\n          }.bind(this)\n        );\n\n        //Calculating screen width\n        var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n        // Adding the close icon to the toast element\n        // Display on the right if screen width is less than or equal to 360px\n        if ((this.options.position == \"left\" || this.options.positionLeft === true) && width > 360) {\n          // Adding close icon on the left of content\n          divElement.insertAdjacentElement(\"afterbegin\", closeElement);\n        } else {\n          // Adding close icon on the right of content\n          divElement.appendChild(closeElement);\n        }\n      }\n\n      // Clear timeout while toast is focused\n      if (this.options.stopOnFocus && this.options.duration > 0) {\n        var self = this;\n        // stop countdown\n        divElement.addEventListener(\n          \"mouseover\",\n          function(event) {\n            window.clearTimeout(divElement.timeOutValue);\n          }\n        )\n        // add back the timeout\n        divElement.addEventListener(\n          \"mouseleave\",\n          function() {\n            divElement.timeOutValue = window.setTimeout(\n              function() {\n                // Remove the toast from DOM\n                self.removeElement(divElement);\n              },\n              self.options.duration\n            )\n          }\n        )\n      }\n\n      // Adding an on-click destination path\n      if (typeof this.options.destination !== \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            if (this.options.newWindow === true) {\n              window.open(this.options.destination, \"_blank\");\n            } else {\n              window.location = this.options.destination;\n            }\n          }.bind(this)\n        );\n      }\n\n      if (typeof this.options.onClick === \"function\" && typeof this.options.destination === \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.options.onClick();\n          }.bind(this)\n        );\n      }\n\n      // Adding offset\n      if(typeof this.options.offset === \"object\") {\n\n        var x = getAxisOffsetAValue(\"x\", this.options);\n        var y = getAxisOffsetAValue(\"y\", this.options);\n\n        var xOffset = this.options.position == \"left\" ? x : \"-\" + x;\n        var yOffset = this.options.gravity == \"toastify-top\" ? y : \"-\" + y;\n\n        divElement.style.transform = \"translate(\" + xOffset + \",\" + yOffset + \")\";\n\n      }\n\n      // Returning the generated element\n      return divElement;\n    },\n\n    // Displaying the toast\n    showToast: function() {\n      // Creating the DOM object for the toast\n      this.toastElement = this.buildToast();\n\n      // Getting the root element to with the toast needs to be added\n      var rootElement;\n      if (typeof this.options.selector === \"string\") {\n        rootElement = document.getElementById(this.options.selector);\n      } else if (this.options.selector instanceof HTMLElement || (typeof ShadowRoot !== 'undefined' && this.options.selector instanceof ShadowRoot)) {\n        rootElement = this.options.selector;\n      } else {\n        rootElement = document.body;\n      }\n\n      // Validating if root element is present in DOM\n      if (!rootElement) {\n        throw \"Root element is not defined\";\n      }\n\n      // Adding the DOM element\n      var elementToInsert = Toastify.defaults.oldestFirst ? rootElement.firstChild : rootElement.lastChild;\n      rootElement.insertBefore(this.toastElement, elementToInsert);\n\n      // Repositioning the toasts in case multiple toasts are present\n      Toastify.reposition();\n\n      if (this.options.duration > 0) {\n        this.toastElement.timeOutValue = window.setTimeout(\n          function() {\n            // Remove the toast from DOM\n            this.removeElement(this.toastElement);\n          }.bind(this),\n          this.options.duration\n        ); // Binding `this` for function invocation\n      }\n\n      // Supporting function chaining\n      return this;\n    },\n\n    hideToast: function() {\n      if (this.toastElement.timeOutValue) {\n        clearTimeout(this.toastElement.timeOutValue);\n      }\n      this.removeElement(this.toastElement);\n    },\n\n    // Removing the element from the DOM\n    removeElement: function(toastElement) {\n      // Hiding the element\n      // toastElement.classList.remove(\"on\");\n      toastElement.className = toastElement.className.replace(\" on\", \"\");\n\n      // Removing the element from DOM after transition end\n      window.setTimeout(\n        function() {\n          // remove options node if any\n          if (this.options.node && this.options.node.parentNode) {\n            this.options.node.parentNode.removeChild(this.options.node);\n          }\n\n          // Remove the element from the DOM, only when the parent node was not removed before.\n          if (toastElement.parentNode) {\n            toastElement.parentNode.removeChild(toastElement);\n          }\n\n          // Calling the callback function\n          this.options.callback.call(toastElement);\n\n          // Repositioning the toasts again\n          Toastify.reposition();\n        }.bind(this),\n        400\n      ); // Binding `this` for function invocation\n    },\n  };\n\n  // Positioning the toasts on the DOM\n  Toastify.reposition = function() {\n\n    // Top margins with gravity\n    var topLeftOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var topRightOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var offsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n\n    // Get all toast messages on the DOM\n    var allToasts = document.getElementsByClassName(\"toastify\");\n\n    var classUsed;\n\n    // Modifying the position of each toast element\n    for (var i = 0; i < allToasts.length; i++) {\n      // Getting the applied gravity\n      if (containsClass(allToasts[i], \"toastify-top\") === true) {\n        classUsed = \"toastify-top\";\n      } else {\n        classUsed = \"toastify-bottom\";\n      }\n\n      var height = allToasts[i].offsetHeight;\n      classUsed = classUsed.substr(9, classUsed.length-1)\n      // Spacing between toasts\n      var offset = 15;\n\n      var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n      // Show toast in center if screen with less than or equal to 360px\n      if (width <= 360) {\n        // Setting the position\n        allToasts[i].style[classUsed] = offsetSize[classUsed] + \"px\";\n\n        offsetSize[classUsed] += height + offset;\n      } else {\n        if (containsClass(allToasts[i], \"toastify-left\") === true) {\n          // Setting the position\n          allToasts[i].style[classUsed] = topLeftOffsetSize[classUsed] + \"px\";\n\n          topLeftOffsetSize[classUsed] += height + offset;\n        } else {\n          // Setting the position\n          allToasts[i].style[classUsed] = topRightOffsetSize[classUsed] + \"px\";\n\n          topRightOffsetSize[classUsed] += height + offset;\n        }\n      }\n    }\n\n    // Supporting function chaining\n    return this;\n  };\n\n  // Helper function to get offset.\n  function getAxisOffsetAValue(axis, options) {\n\n    if(options.offset[axis]) {\n      if(isNaN(options.offset[axis])) {\n        return options.offset[axis];\n      }\n      else {\n        return options.offset[axis] + 'px';\n      }\n    }\n\n    return '0px';\n\n  }\n\n  function containsClass(elem, yourClass) {\n    if (!elem || typeof yourClass !== \"string\") {\n      return false;\n    } else if (\n      elem.className &&\n      elem.className\n        .trim()\n        .split(/\\s+/gi)\n        .indexOf(yourClass) > -1\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Setting up the prototype for the init object\n  Toastify.lib.init.prototype = Toastify.lib;\n\n  // Returning the Toastify function to be assigned to the window object/module\n  return Toastify;\n});\n","import Toastify from 'toastify-js'\n\nconst GAME_SIZE = 21;\nlet DIFFICULTY_LOOP_MS = 100;\n\nlet board;\nlet gameLoop;\n\nlet gameBoard;\nlet direction = \"up\";\nlet lastAppliedDirection;\nlet snakePos = [];\nlet foodPos = {};\nlet score = 0;\n\nconst randomCordinate = (min = 1, max = GAME_SIZE - 2 ) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nconst resetSnakePosition = () => {\n    snakePos = [\n        {x : Math.floor(GAME_SIZE / 2), y: Math.floor(GAME_SIZE / 2)}\n    ];\n};\nconst generateNewFood =() => {\n    let x;\n    let y;\n\n    do {\n        x = randomCordinate()\n        y = randomCordinate()\n    } while(snakePos.find(el => el.x === x && el.y === y));\n    foodPos.x = x;\n    foodPos.y = y;\n    score += 1;\n\n}\n\n\nfunction startGame(){\n    direction =\"\";\n    board.innerHTML = ''; \n    gameBoard = [];\n    score = 0;\n\n    for (let y = 0; y <= GAME_SIZE; y ++){\n        const rowEl = document.createElement(\"div\")\n        rowEl.classList.add(\"row\")\n        for(let x = 0; x < GAME_SIZE; x++) {\n            const cellEl = document.createElement(\"div\")\n            cellEl.classList.add(\"cell\")\n            // cellEl.innerText = `${x} / ${y}`\n\n            if(!gameBoard[x]){\n                gameBoard[x] = []\n            }\n            gameBoard[x][y] = cellEl\n            rowEl.append(cellEl)\n        }\n        board.append(rowEl)\n    }\n\nresetSnakePosition()\ngenerateNewFood()\nclearInterval(gameLoop)\n    gameLoop = setInterval(() => {\n        calculateSnakePosition()\n        updateBoard();\n    }, DIFFICULTY_LOOP_MS)\n}\nconst detectWallColision = (pos) => {\n    if(pos.x === GAME_SIZE ||\n         pos.y === GAME_SIZE ||\n          pos.x < 0 ||\n           pos.y < 0){\n        return true\n    }\n    return false\n}\n\nconst collisionHandler = () => {\n    Toastify({\n        text: `GAME OVER with a score of ${score}`,\n        duration: 5000,\n    }).showToast();\n    startGame();\n}\n\nconst foodColison = (pos) => pos.x === foodPos.x && pos.y === foodPos.y\n\nconst detectOnSnakePositon = (pos) => \n     snakePos.find((el, i) => el.x === pos.x && el.y === pos.y && i !== 0)\n\n\nconst calculateSnakePosition = () => {\n    const lastSegmentPosition = {\n        x : snakePos[snakePos.length -1].x,\n        y : snakePos[snakePos.length -1].y,\n    }\n    for(let i = snakePos.length -1; i >= 0; i--){\n        const pos = snakePos[i]\n        if(i === 0){\n            if(direction === \"up\"){\n                pos.y -= 1;\n            }\n            if(direction === \"left\"){\n                pos.x -= 1;\n            }\n            if(direction === \"down\"){\n                pos.y += 1;\n            }\n            if(direction === \"right\"){\n                pos.x += 1;\n            }\n\n            lastAppliedDirection = direction;\n        \n        if(detectWallColision(pos) || detectOnSnakePositon(pos)){\n            collisionHandler()\n            return;\n        }\n    } else {\n        pos.x = snakePos[i -1].x;\n        pos.y = snakePos[i -1].y;\n    }\n\n    if(foodColison(pos)) {\n        generateNewFood();\n        snakePos.push(lastSegmentPosition)\n    }\n}\n} \n\nconst updateBoard = () => {\n    gameBoard.forEach((row) => {\n        row.forEach((cell) => {\n            cell.classList = \"cell\"\n        })\n    });\n    snakePos.forEach(({x, y}) => {\n        gameBoard[x][y].classList.add(\"snake\")\n    })\n\n    gameBoard[foodPos.x][foodPos.y].classList.add(\"food\")\n\n\n}\n\nwindow.addEventListener(\"load\" , () => {\n     board = document.querySelector(\"#board\")\n    \n    startGame();\n});\n\ndocument.addEventListener(\"keydown\", (e) => {\n    switch(e.code) {\n        case 'ArrowUp' :\n            if(lastAppliedDirection !== \"down\") direction = \"up\";\n            break;\n        case 'ArrowDown' :\n            if(lastAppliedDirection !== \"up\") direction = \"down\";\n            break;\n        case 'ArrowLeft' :\n            if(lastAppliedDirection !== \"right\") direction = \"left\";\n            break;\n        case 'ArrowRight' :\n            if(lastAppliedDirection !== \"left\") direction = \"right\";\n            break;\n    }\n})\n"],"names":["root","factory","$2a97c7e41be93f40$exports","global","Toastify","options","lib","init","getAxisOffsetAValue","axis","offset","isNaN","containsClass","elem","yourClass","className","trim","split","indexOf","defaults","oldestFirst","text","node","undefined","duration","selector","callback","destination","newWindow","close","gravity","positionLeft","position","backgroundColor","avatar","stopOnFocus","onClick","x","y","escapeMarkup","ariaLive","style","background","prototype","toastify","constructor","this","toastElement","buildToast","divElement","document","createElement","property","console","warn","setAttribute","nodeType","Node","ELEMENT_NODE","appendChild","innerText","innerHTML","avatarElement","src","insertAdjacentElement","closeElement","type","addEventListener","event","stopPropagation","removeElement","window","clearTimeout","timeOutValue","bind","width","innerWidth","screen","self","setTimeout","open","location","xOffset","yOffset","transform","showToast","rootElement","getElementById","HTMLElement","ShadowRoot","body","elementToInsert","firstChild","lastChild","insertBefore","reposition","hideToast","replace","parentNode","removeChild","call","classUsed","topLeftOffsetSize","top","bottom","topRightOffsetSize","offsetSize","allToasts","getElementsByClassName","i","length","height","offsetHeight","substr","$b8f9b7833fa37166$var$board","$b8f9b7833fa37166$var$gameLoop","$b8f9b7833fa37166$var$gameBoard","$b8f9b7833fa37166$var$lastAppliedDirection","$b8f9b7833fa37166$var$GAME_SIZE","$b8f9b7833fa37166$var$direction","$b8f9b7833fa37166$var$snakePos","$b8f9b7833fa37166$var$foodPos","$b8f9b7833fa37166$var$score","$b8f9b7833fa37166$var$randomCordinate","min","arguments","max","Math","floor","random","$b8f9b7833fa37166$var$generateNewFood","find","el","$b8f9b7833fa37166$var$startGame","rowEl","classList","add","cellEl","append","clearInterval","setInterval","$b8f9b7833fa37166$var$calculateSnakePosition","$b8f9b7833fa37166$var$updateBoard","$b8f9b7833fa37166$var$detectWallColision","pos","$b8f9b7833fa37166$var$foodColison","$b8f9b7833fa37166$var$detectOnSnakePositon","lastSegmentPosition","$parcel$interopDefault","concat","push","forEach","row","cell","param","querySelector","e","code"],"version":3,"file":"index.5a335550.js.map"}